{
    "openapi": "3.0.0",
    "info": {
        "title": "SAKA API",
        "description": "All documentation for SAKA API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint for user login and generate token for authentication",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email or username value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "random token here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get user login self information",
                "operationId": "6804f9f92bfdc4d8fe300f2c5cc35d19",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint user will refresh their token",
                "operationId": "login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "random token here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "logout user authenticate",
                "operationId": "c4eddaf1a2e990cc90e4326c0d731d41",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/permissions?page=1&per_page=50&search=search": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get all permissions with pagination.by default it taken 50 record for every request. you can do search ?search=mysearch in this endpoint",
                "operationId": "24aa792d4b195d4d71e156914b3e5622",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page for retrieve data as pagination",
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "parameter to for per page data with be retrieve",
                        "example": "50"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "parameter to for search something similar",
                        "example": "IT Dev"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "showing current page of data pagination",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "description": "data of pagination",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Edit Article"
                                                    },
                                                    "module": {
                                                        "type": "string",
                                                        "example": "IT Development"
                                                    },
                                                    "guard_name": {
                                                        "type": "String",
                                                        "example": "Web"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "This example of permission"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "path": {
                                            "description": "path information of url",
                                            "type": "string",
                                            "example": "http://localhost:8000/api/v1/permissions"
                                        },
                                        "last_page": {
                                            "description": "showing the last page of pagination",
                                            "type": "integer",
                                            "example": "4"
                                        },
                                        "per_page": {
                                            "description": "showing item display for every request",
                                            "type": "integer",
                                            "example": "50"
                                        },
                                        "total": {
                                            "description": "showing all total of record according the query",
                                            "type": "integer",
                                            "example": "50"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/give-permission": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Give permission (spatie) to user. so user will have access to do something belonging to given permissions",
                "operationId": "permission",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user_id of user to be granted access",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "query",
                        "description": "permission to be granted",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Edit Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/revoke-permission": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Revoke permission (spatie) from user. so user will have no access to do something belonging to permissions",
                "operationId": "permission",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user_id of user to be granted access",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "query",
                        "description": "permission to be granted",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Edit Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/users?page=1&per_page=50&search=search": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users with pagination.by default it taken 50 record for every request. you can do search ?search=mysearch in this endpoint",
                "description": "Display a listing of the resource.",
                "operationId": "c1d32efdfbeb431f3bef76a8cb9260ca",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page for retrieve data as pagination",
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "parameter to for per page data with be retrieve",
                        "example": "50"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "parameter to for search something similar",
                        "example": "IT Dev"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "showing current page of data pagination",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "description": "data of pagination",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "path": {
                                            "description": "path information of url",
                                            "type": "string",
                                            "example": "http://localhost:8000/api/v1/users"
                                        },
                                        "last_page": {
                                            "description": "showing the last page of pagination",
                                            "type": "integer",
                                            "example": "4"
                                        },
                                        "per_page": {
                                            "description": "showing item display for every request",
                                            "type": "integer",
                                            "example": "50"
                                        },
                                        "total": {
                                            "description": "showing all total of record according the query",
                                            "type": "integer",
                                            "example": "50"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/": {
            "get": {
                "tags": [
                    "Welcome"
                ],
                "summary": "Welcome index",
                "operationId": "96cfe029f3fccbe8076bef12d75e0494",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "description": "User Model for all authenticated users",
                "properties": {
                    "username": {
                        "title": "username",
                        "description": "username for user",
                        "type": "string",
                        "example": "beautiful"
                    },
                    "email": {
                        "title": "email",
                        "description": "email of user",
                        "type": "string",
                        "example": "beautiful@pt-saa.com"
                    },
                    "role": {
                        "title": "role",
                        "description": "role for user access level",
                        "type": "string",
                        "example": "user"
                    },
                    "user_group": {
                        "title": "user_group",
                        "description": "default user group from user",
                        "type": "string",
                        "example": "EDP"
                    },
                    "is_active": {
                        "title": "is_active",
                        "description": "check the user is active",
                        "type": "integer",
                        "example": "1"
                    },
                    "email_verified_at": {
                        "title": "email_verified_at",
                        "description": "check email verification date",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "date created for row record",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "date updated for row record",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    },
                    "deleted_at": {
                        "title": "deleted_at",
                        "description": "date deleted for row record apply soft deleted",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}