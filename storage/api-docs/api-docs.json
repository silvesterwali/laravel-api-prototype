{
    "openapi": "3.0.0",
    "info": {
        "title": "SAKA API",
        "description": "All documentation for SAKA API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint for user login and generate token for authentication",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email or username value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "random token here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get user login self information",
                "operationId": "6804f9f92bfdc4d8fe300f2c5cc35d19",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint user will refresh their token",
                "operationId": "login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "random token here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "logout user authenticate",
                "operationId": "c4eddaf1a2e990cc90e4326c0d731d41",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/employee-levels": {
            "get": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Get all employee level list. this module for human resource and new form of hrm_level module",
                "operationId": "710e9b3c0c47a1a701ae55b859ec75ba",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmployeeLevel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Create new employee level resource",
                "description": "Store a newly created resource in storage.",
                "operationId": "EmployeeLevel",
                "parameters": [
                    {
                        "name": "sorting_number",
                        "in": "query",
                        "description": "For sorting purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1000"
                        }
                    },
                    {
                        "name": "level_code",
                        "in": "query",
                        "description": "stand for level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "STF"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "level for list of employee level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Staff"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "if the data need to explained how it work or something else",
                        "schema": {
                            "type": "string",
                            "example": "Staff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmployeeLevel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/employee-levels/{id}": {
            "get": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Get all employee level list. this module for human resource and new form of hrm_level module",
                "description": "Display the specified resource.",
                "operationId": "020d62f8e82bcc3f705d29fafe750d04",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Level id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeLevel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Update specific existing employee level list",
                "description": "Update the specified resource in storage.",
                "operationId": "EmployeeLevel",
                "parameters": [
                    {
                        "name": "sorting_number",
                        "in": "query",
                        "description": "For sorting purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1000"
                        }
                    },
                    {
                        "name": "level_code",
                        "in": "query",
                        "description": "stand for level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "STF"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "level for list of employee level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Staff"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "if the data need to explained how it work or something else",
                        "schema": {
                            "type": "string",
                            "example": "Staff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmployeeLevel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Delete Specific employee level list",
                "description": "Remove the specified resource from storage.",
                "operationId": "263bc3809d6be08e2dadb80789eaf1c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Level id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success delete specified employee level list"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmployeeLevel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/permissions?page=1&per_page=50&search=search": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get all permissions with pagination.by default it taken 50 record for every request. you can do search ?search=mysearch in this endpoint",
                "operationId": "24aa792d4b195d4d71e156914b3e5622",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page for retrieve data as pagination",
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "parameter to for per page data with be retrieve",
                        "example": "50"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "parameter to for search something similar",
                        "example": "IT Dev"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "showing current page of data pagination",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "description": "data of pagination",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Edit Article"
                                                    },
                                                    "module": {
                                                        "type": "string",
                                                        "example": "IT Development"
                                                    },
                                                    "guard_name": {
                                                        "type": "String",
                                                        "example": "Web"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "This example of permission"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "path": {
                                            "description": "path information of url",
                                            "type": "string",
                                            "example": "http://localhost:8000/api/v1/permissions"
                                        },
                                        "last_page": {
                                            "description": "showing the last page of pagination",
                                            "type": "integer",
                                            "example": "4"
                                        },
                                        "per_page": {
                                            "description": "showing item display for every request",
                                            "type": "integer",
                                            "example": "50"
                                        },
                                        "total": {
                                            "description": "showing all total of record according the query",
                                            "type": "integer",
                                            "example": "50"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/give-permission": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Give permission (spatie) to user. so user will have access to do something belonging to given permissions",
                "operationId": "permission",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user_id of user to be granted access",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "query",
                        "description": "permission to be granted",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Edit Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/revoke-permission": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Revoke permission (spatie) from user. so user will have no access to do something belonging to permissions",
                "operationId": "permission",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user_id of user to be granted access",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "query",
                        "description": "permission to be granted",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Edit Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/users?page=1&per_page=50&search=search": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users with pagination.by default it taken 50 record for every request. you can do search ?search=mysearch in this endpoint",
                "description": "Display a listing of the resource.",
                "operationId": "c1d32efdfbeb431f3bef76a8cb9260ca",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page for retrieve data as pagination",
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "parameter to for per page data with be retrieve",
                        "example": "50"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "parameter to for search something similar",
                        "example": "IT Dev"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "showing current page of data pagination",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "description": "data of pagination",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "path": {
                                            "description": "path information of url",
                                            "type": "string",
                                            "example": "http://localhost:8000/api/v1/users"
                                        },
                                        "last_page": {
                                            "description": "showing the last page of pagination",
                                            "type": "integer",
                                            "example": "4"
                                        },
                                        "per_page": {
                                            "description": "showing item display for every request",
                                            "type": "integer",
                                            "example": "50"
                                        },
                                        "total": {
                                            "description": "showing all total of record according the query",
                                            "type": "integer",
                                            "example": "50"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create new user access",
                "description": "Show the form for creating a new resource.",
                "operationId": "ba548b97148bb5c0d8cab3bc3f128bfd",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "username for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully@pt-saa.com"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "password for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully"
                        }
                    },
                    {
                        "name": "password_confirm",
                        "in": "query",
                        "description": "password_conform to confirm password for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "role for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user"
                        }
                    },
                    {
                        "name": "user_group",
                        "in": "query",
                        "description": "user_group for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EDP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success create new user"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/users/1": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Specific user information",
                "description": "Display a listing of the resource.",
                "operationId": "6da97e719bea4d205be4c8733fffc635",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id of user to retrieve",
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/users/id": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update specified user record access",
                "description": "Show the form for creating a new resource.",
                "operationId": "a0f55251ad59f49eb8e64cf1ee9de605",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id of user to retrieve",
                        "example": "1"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "username for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully@pt-saa.com"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "role for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user"
                        }
                    },
                    {
                        "name": "user_group",
                        "in": "query",
                        "description": "user_group for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EDP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Update user successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/": {
            "get": {
                "tags": [
                    "Welcome"
                ],
                "summary": "Welcome index",
                "operationId": "96cfe029f3fccbe8076bef12d75e0494",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "EmployeeDepartment": {
                "description": "EmployeeDepartment is used as available department for employees",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of employment table",
                        "type": "integer",
                        "example": "1"
                    },
                    "sorting_number": {
                        "title": "sorting_number",
                        "description": "column to for sorting item in table",
                        "type": "integer",
                        "example": "1"
                    },
                    "department_code": {
                        "title": "department_code",
                        "description": "Code for the department",
                        "type": "string",
                        "example": "ITD"
                    },
                    "department": {
                        "title": "department",
                        "description": "department title",
                        "type": "string",
                        "example": "Information Technology"
                    },
                    "description": {
                        "title": "description",
                        "description": "some description for this department",
                        "type": "string",
                        "example": "this department is so awesome"
                    }
                },
                "type": "object"
            },
            "EmployeeDivision": {
                "description": "EmployeeDepartment is used as available division for employees",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of table",
                        "type": "integer",
                        "example": "1"
                    },
                    "sorting_number": {
                        "title": "sorting_number",
                        "description": "some how the position list will confused the user .so user the sorting_number to help them at their work.",
                        "type": "integer",
                        "example": "1"
                    },
                    "division_code": {
                        "title": "division_code",
                        "description": "the sort alias of the employee division",
                        "type": "string",
                        "example": "FIN"
                    },
                    "division": {
                        "title": "division",
                        "description": "division property",
                        "type": "string",
                        "example": "Finance"
                    },
                    "description": {
                        "title": "description",
                        "description": "division description for some information about the division",
                        "type": "string",
                        "example": "this division really awesome for long terms"
                    }
                },
                "type": "object"
            },
            "EmployeeLevel": {
                "description": "Model for store list level of saka employees",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of employee level table.",
                        "type": "integer",
                        "example": "1"
                    },
                    "sorting_number": {
                        "title": "sorting_number",
                        "description": "for sorting the employee level",
                        "type": "integer",
                        "example": "100"
                    },
                    "level_code": {
                        "title": "level_code",
                        "description": "level code of employee",
                        "type": "string",
                        "example": "STF"
                    },
                    "level": {
                        "title": "level",
                        "description": "level of employee",
                        "type": "string",
                        "example": "Staff"
                    },
                    "description": {
                        "title": "description",
                        "description": "some description or information of the level",
                        "type": "string",
                        "example": "Staff"
                    }
                },
                "type": "object"
            },
            "EmployeePosition": {
                "description": "Module for help employees data for their position as employees in the office",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of table",
                        "type": "integer",
                        "example": "1"
                    },
                    "sorting_number": {
                        "title": "sorting_number",
                        "description": "helper to sorting the item for user interface",
                        "type": "integer",
                        "example": "1"
                    },
                    "position_code": {
                        "title": "position_code",
                        "description": "the sort alias of the position",
                        "type": "string",
                        "example": "HOO"
                    },
                    "position": {
                        "title": "position",
                        "description": "the field position user as employee position property",
                        "type": "string",
                        "example": "Head of operation"
                    },
                    "description": {
                        "title": "description",
                        "description": "some information about the position so user will understand how it should be",
                        "type": "string",
                        "example": "this position is good for mental health.because will have a lot salary to buy plan"
                    }
                },
                "type": "object"
            },
            "EmployeeReligion": {
                "description": "The module is used to store level one of page directory after the domain is of front end. and will follow by page sub menu directory as child page. this will support dynamic access page for user",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of table",
                        "type": "integer",
                        "example": "1"
                    },
                    "religion": {
                        "title": "religion",
                        "description": "the field name show the value of meaningful",
                        "type": "string",
                        "example": "HINDU"
                    }
                },
                "type": "object"
            },
            "PageMenu": {
                "description": "The module is used to store level one of page directory after the domain is of front end. and will follow by page sub menu directory as child page. this will support dynamic access page for user",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of table",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "title": "title",
                        "description": "title for the menu to user label if button or label on order list",
                        "type": "string",
                        "example": "Inventory"
                    },
                    "page_directory": {
                        "title": "page_directory",
                        "description": "The first level of the page directory after the domain of front end",
                        "type": "string",
                        "example": "/inventory/"
                    },
                    "icon_class": {
                        "title": "icon_class",
                        "description": "user menu maybe used icon like font awesome or mdi form google icon",
                        "type": "string",
                        "example": "mdi-apps"
                    },
                    "module": {
                        "title": "module",
                        "description": "will grouping by general division like accounting,inventory,general affair and so on",
                        "type": "string",
                        "example": "inventory"
                    },
                    "sorting_number": {
                        "title": "sorting_number",
                        "description": "sometime we don't want plan the system at all. so we want to move the menu to top or bottom so why this field was",
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "title": "description",
                        "description": "the page description and also can be used  as meta description at front end",
                        "type": "string",
                        "example": "this page is awesome,goog looking with artisan series"
                    }
                },
                "type": "object"
            },
            "PageSubMenu": {
                "description": "PageSubMenu is model for to storage all child menu for front end menu navigation needed",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of table",
                        "type": "integer",
                        "example": "1"
                    },
                    "page_menu_id": {
                        "title": "id",
                        "description": "id of page_menus table",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "title": "title",
                        "description": "title of page sub menu",
                        "type": "string",
                        "example": "Maintenance"
                    },
                    "page_directory": {
                        "title": "page_directory",
                        "description": "the fist page sub directory from parent directory on front end page",
                        "type": "string",
                        "example": "/maintenance"
                    },
                    "description": {
                        "title": "description",
                        "description": "The description of the page sub menu. this will for seo also",
                        "type": "string",
                        "example": "this page is awesome"
                    },
                    "sorting_number": {
                        "title": "sorting_number",
                        "description": "sometime user need to sort their menu from top to bottom as they like. this will help to effort it",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "User Model for all authenticated users",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of user",
                        "type": "integer",
                        "example": "1"
                    },
                    "username": {
                        "title": "username",
                        "description": "username for user",
                        "type": "string",
                        "example": "beautiful"
                    },
                    "email": {
                        "title": "email",
                        "description": "email of user",
                        "type": "string",
                        "example": "beautiful@pt-saa.com"
                    },
                    "role": {
                        "title": "role",
                        "description": "role for user access level",
                        "type": "string",
                        "example": "user"
                    },
                    "user_group": {
                        "title": "user_group",
                        "description": "default user group from user",
                        "type": "string",
                        "example": "EDP"
                    },
                    "is_active": {
                        "title": "is_active",
                        "description": "check the user is active",
                        "type": "integer",
                        "example": "1"
                    },
                    "email_verified_at": {
                        "title": "email_verified_at",
                        "description": "check email verification date",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "date created for row record",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "date updated for row record",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    },
                    "deleted_at": {
                        "title": "deleted_at",
                        "description": "date deleted for row record apply soft deleted",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    }
                },
                "type": "object"
            },
            "UserHasPageSubMenu": {
                "description": "This model was provided for user to have access to menu page in their front end",
                "properties": {
                    "user_id": {
                        "title": "user_id",
                        "description": "id of user table.this will belongs to user",
                        "type": "integer",
                        "example": "1"
                    },
                    "page_sub_menu_id": {
                        "title": "page_sub_menu_id",
                        "description": "page sub menu id from page_sub_menu.",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UserTelegram": {
                "description": "Model to store all user telegram id.",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of user telegram table",
                        "type": "integer",
                        "example": "1"
                    },
                    "user_id": {
                        "title": "id",
                        "description": "id of user table",
                        "type": "integer",
                        "example": "1"
                    },
                    "telegrams": {
                        "title": "telegrams",
                        "description": "telegram public id",
                        "type": "string",
                        "example": "1092342"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "date created  for row record",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "date updated for row record",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    },
                    "deleted_at": {
                        "title": "deleted_at",
                        "description": "date deleted for row record apply soft deleted",
                        "type": "string",
                        "format": "datetime",
                        "example": "2022-02-14 17:50:45"
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}