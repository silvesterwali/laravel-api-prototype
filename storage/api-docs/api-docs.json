{
    "openapi": "3.0.0",
    "info": {
        "title": "SAKA API",
        "description": "All documentation for SAKA API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint for user login and generate token for authentication",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email or username value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "random token here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get user login self information",
                "operationId": "6804f9f92bfdc4d8fe300f2c5cc35d19",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint user will refresh their token",
                "operationId": "login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "random token here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "logout user authenticate",
                "operationId": "c4eddaf1a2e990cc90e4326c0d731d41",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/employee-levels": {
            "get": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Get all employee level list. this module for human resource and new form of hrm_level module",
                "operationId": "710e9b3c0c47a1a701ae55b859ec75ba",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmployeeLevel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Create new employee level resource",
                "description": "Store a newly created resource in storage.",
                "operationId": "EmployeeLevel",
                "parameters": [
                    {
                        "name": "sorting_number",
                        "in": "query",
                        "description": "For sorting purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1000"
                        }
                    },
                    {
                        "name": "level_code",
                        "in": "query",
                        "description": "stand for level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "STF"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "level for list of employee level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Staff"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "if the data need to explained how it work or something else",
                        "schema": {
                            "type": "string",
                            "example": "Staff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmployeeLevel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/employee-levels/{id}": {
            "get": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Get all employee level list. this module for human resource and new form of hrm_level module",
                "description": "Display the specified resource.",
                "operationId": "020d62f8e82bcc3f705d29fafe750d04",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Level id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeLevel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Update specific existing employee level list",
                "description": "Update the specified resource in storage.",
                "operationId": "EmployeeLevel",
                "parameters": [
                    {
                        "name": "sorting_number",
                        "in": "query",
                        "description": "For sorting purpose",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1000"
                        }
                    },
                    {
                        "name": "level_code",
                        "in": "query",
                        "description": "stand for level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "STF"
                        }
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "level for list of employee level",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Staff"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "if the data need to explained how it work or something else",
                        "schema": {
                            "type": "string",
                            "example": "Staff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmployeeLevel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "EmployeeLevel"
                ],
                "summary": "Delete Specific employee level list",
                "description": "Remove the specified resource from storage.",
                "operationId": "263bc3809d6be08e2dadb80789eaf1c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee Level id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success delete specified employee level list"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmployeeLevel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/permissions?page=1&per_page=50&search=search": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get all permissions with pagination.by default it taken 50 record for every request. you can do search ?search=mysearch in this endpoint",
                "operationId": "24aa792d4b195d4d71e156914b3e5622",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page for retrieve data as pagination",
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "parameter to for per page data with be retrieve",
                        "example": "50"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "parameter to for search something similar",
                        "example": "IT Dev"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "showing current page of data pagination",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "description": "data of pagination",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Edit Article"
                                                    },
                                                    "module": {
                                                        "type": "string",
                                                        "example": "IT Development"
                                                    },
                                                    "guard_name": {
                                                        "type": "String",
                                                        "example": "Web"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "This example of permission"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "path": {
                                            "description": "path information of url",
                                            "type": "string",
                                            "example": "http://localhost:8000/api/v1/permissions"
                                        },
                                        "last_page": {
                                            "description": "showing the last page of pagination",
                                            "type": "integer",
                                            "example": "4"
                                        },
                                        "per_page": {
                                            "description": "showing item display for every request",
                                            "type": "integer",
                                            "example": "50"
                                        },
                                        "total": {
                                            "description": "showing all total of record according the query",
                                            "type": "integer",
                                            "example": "50"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/give-permission": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Give permission (spatie) to user. so user will have access to do something belonging to given permissions",
                "operationId": "permission",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user_id of user to be granted access",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "query",
                        "description": "permission to be granted",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Edit Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/revoke-permission": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Revoke permission (spatie) from user. so user will have no access to do something belonging to permissions",
                "operationId": "permission",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user_id of user to be granted access",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "query",
                        "description": "permission to be granted",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Edit Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success give permission to user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/v1/users?page=1&per_page=50&search=search": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users with pagination.by default it taken 50 record for every request. you can do search ?search=mysearch in this endpoint",
                "description": "Display a listing of the resource.",
                "operationId": "c1d32efdfbeb431f3bef76a8cb9260ca",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page for retrieve data as pagination",
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "parameter to for per page data with be retrieve",
                        "example": "50"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "parameter to for search something similar",
                        "example": "IT Dev"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "showing current page of data pagination",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "description": "data of pagination",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "path": {
                                            "description": "path information of url",
                                            "type": "string",
                                            "example": "http://localhost:8000/api/v1/users"
                                        },
                                        "last_page": {
                                            "description": "showing the last page of pagination",
                                            "type": "integer",
                                            "example": "4"
                                        },
                                        "per_page": {
                                            "description": "showing item display for every request",
                                            "type": "integer",
                                            "example": "50"
                                        },
                                        "total": {
                                            "description": "showing all total of record according the query",
                                            "type": "integer",
                                            "example": "50"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create new user access",
                "description": "Show the form for creating a new resource.",
                "operationId": "ba548b97148bb5c0d8cab3bc3f128bfd",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "username for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully@pt-saa.com"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "password for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully"
                        }
                    },
                    {
                        "name": "password_confirm",
                        "in": "query",
                        "description": "password_conform to confirm password for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "role for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user"
                        }
                    },
                    {
                        "name": "user_group",
                        "in": "query",
                        "description": "user_group for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EDP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success create new user"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/users/1": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Specific user information",
                "description": "Display a listing of the resource.",
                "operationId": "6da97e719bea4d205be4c8733fffc635",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id of user to retrieve",
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/v1/users/id": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update specified user record access",
                "description": "Show the form for creating a new resource.",
                "operationId": "a0f55251ad59f49eb8e64cf1ee9de605",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id of user to retrieve",
                        "example": "1"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "username for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "beautifully@pt-saa.com"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "role for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user"
                        }
                    },
                    {
                        "name": "user_group",
                        "in": "query",
                        "description": "user_group for new user access",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "EDP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Update user successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum ": []
                    }
                ]
            }
        },
        "/api/": {
            "get": {
                "tags": [
                    "Welcome"
                ],
                "summary": "Welcome index",
                "operationId": "96cfe029f3fccbe8076bef12d75e0494",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "EmployeeDepartment": {
                "description": "Schema of employee division table. To provide list division as employee property.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "sorting_number": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "department_code": {
                        "type": "string",
                        "example": "ITD"
                    },
                    "department": {
                        "type": "string",
                        "example": "Information Technology"
                    },
                    "description": {
                        "type": "string",
                        "example": "This department do much"
                    }
                },
                "type": "object"
            },
            "EmployeeDivision": {
                "description": "Schema of employee division table. To provide list division as employee property.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "sorting_number": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "division_code": {
                        "type": "string",
                        "example": "IT"
                    },
                    "division": {
                        "type": "string",
                        "example": "Information Technology"
                    },
                    "description": {
                        "type": "string",
                        "example": "This division do much"
                    }
                },
                "type": "object"
            },
            "EmployeeLevel": {
                "description": "Schema of employee level table. To provide list level as employee property.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "sorting_number": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "level_code": {
                        "type": "string",
                        "example": "STF"
                    },
                    "level": {
                        "type": "string",
                        "example": "Staff"
                    },
                    "description": {
                        "type": "string",
                        "example": "This level do much"
                    }
                },
                "type": "object"
            },
            "EmployeePosition": {
                "description": "Schema of employee position table. To provide list position as employee property.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "sorting_number": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "position_code": {
                        "type": "string",
                        "example": "SQLS"
                    },
                    "position": {
                        "type": "string",
                        "example": "SQL Admin"
                    },
                    "description": {
                        "type": "string",
                        "example": "This position do much"
                    }
                },
                "type": "object"
            },
            "EmployeeReligion": {
                "description": "Schema of employee religion table. To provide list religion as employee property.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "religion": {
                        "type": "string",
                        "example": "HINDU"
                    }
                },
                "type": "object"
            },
            "PageMenu": {
                "description": "Provide menu management from front end needed. and inspire by vuetify menu drawer. this table will be the first route directory",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Accounting"
                    },
                    "page_directory": {
                        "type": "string",
                        "example": "/accounting"
                    },
                    "icon_class": {
                        "type": "string",
                        "example": "mdi-apps"
                    },
                    "module": {
                        "type": "string",
                        "example": "Accounting"
                    },
                    "sorting_number": {
                        "description": "some how user want the menu to top or bottom this will help",
                        "type": "string",
                        "example": "1"
                    },
                    "description": {
                        "description": "This property can be used to meta property",
                        "type": "string",
                        "example": "This page is awesome"
                    }
                },
                "type": "object"
            },
            "PageSubMenu": {
                "description": "Schema for child every child menu",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "page_menu_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Accounting"
                    },
                    "page_directory": {
                        "type": "string",
                        "example": "/accounting"
                    },
                    "sorting_number": {
                        "type": "string",
                        "example": "mdi-apps"
                    },
                    "description": {
                        "description": "This property can be used to meta property",
                        "type": "string",
                        "example": "This page is awesome"
                    }
                },
                "type": "object"
            },
            "Permission": {
                "description": "Schema represent the permission table generate by spatie",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Create User"
                    },
                    "guard_name": {
                        "type": "string",
                        "example": "web"
                    },
                    "module": {
                        "type": "string",
                        "example": "Accounting"
                    },
                    "description": {
                        "description": "This property can be used to meta property",
                        "type": "string",
                        "example": "This page is awesome"
                    },
                    "created_at": {
                        "description": "The created_at property ,",
                        "type": "string",
                        "format": "datetime",
                        "example": "2015-02-23 14:40:15.000"
                    },
                    "updated_at": {
                        "description": "The updated_at property ,",
                        "type": "string",
                        "format": "datetime",
                        "example": "2015-02-23 14:40:15.000"
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "Schema of users table. Represent authentication",
                "properties": {
                    "id": {
                        "description": "The id of the table",
                        "type": "integer",
                        "example": "1"
                    },
                    "username": {
                        "description": "The  username property of user",
                        "type": "string",
                        "example": "beautifully"
                    },
                    "email": {
                        "description": "The email property of user,",
                        "type": "string",
                        "example": "beautifully@pt-saa.com"
                    },
                    "role": {
                        "description": "The role name,",
                        "type": "string",
                        "example": "user"
                    },
                    "user_group": {
                        "description": "The user_group property,",
                        "type": "string",
                        "example": "EDP"
                    },
                    "is_active": {
                        "description": "The  is_active property, to determine if the user is active,",
                        "type": "boolean",
                        "example": "true"
                    },
                    "created_at": {
                        "description": "The created_at property ,",
                        "type": "string",
                        "format": "datetime",
                        "example": "2015-02-23 14:40:15.000"
                    },
                    "updated_at": {
                        "description": "The updated_at property ,",
                        "type": "string",
                        "format": "datetime",
                        "example": "2015-02-23 14:40:15.000"
                    }
                },
                "type": "object"
            },
            "UserHasPageSubMenu": {
                "description": "Schema for have to access page menu",
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "page_sub_menu_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UserTelegram": {
                "description": "Schema user telegram table. belongs to user table. every user have one telegram",
                "properties": {
                    "id": {
                        "description": "The id property of table.",
                        "type": "integer",
                        "example": "1"
                    },
                    "user_id": {
                        "description": "The user_id property of table. represent users tables id",
                        "type": "integer",
                        "example": "1"
                    },
                    "telegrams": {
                        "description": "The property telegrams id",
                        "type": "string",
                        "example": "02934293742"
                    },
                    "created_at": {
                        "description": "The created_at property ,",
                        "type": "string",
                        "format": "datetime",
                        "example": "2015-02-23 14:40:15.000"
                    },
                    "updated_at": {
                        "description": "The updated_at property ,",
                        "type": "string",
                        "format": "datetime",
                        "example": "2015-02-23 14:40:15.000"
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}